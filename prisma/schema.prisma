// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurante {
  id           Int            @id @default(autoincrement())
  descricao    String         @db.VarChar(80)
  ativo        Boolean        @default(true)
  TipoItem     TipoItem[]
  TipoMarmitex TipoMarmitex[]
  Cardapio     Cardapio[]
}

model TipoItem {
  id                   Int                    @id @default(autoincrement())
  descricao            String                 @db.VarChar(60)
  restauranteId        Int
  restaurante          Restaurante            @relation(fields: [restauranteId], references: [id], onDelete: Cascade)
  ativo                Boolean                @default(true)
  Item                 Item[]
  ConfiguracaoMarmitex ConfiguracaoMarmitex[]

  @@unique([restauranteId, descricao])
}

model Item {
  id            Int             @id @default(autoincrement())
  descricao     String          @db.VarChar(60)
  tipoItemId    Int
  tipoItem      TipoItem        @relation(fields: [tipoItemId], references: [id], onDelete: Cascade)
  CardapioItens CardapioItens[]

  @@unique([tipoItemId, descricao])
}

model TipoMarmitex {
  id                   Int                    @id @default(autoincrement())
  descricao            String                 @db.VarChar(40)
  restauranteId        Int
  restaurante          Restaurante            @relation(fields: [restauranteId], references: [id], onDelete: Cascade)
  ConfiguracaoMarmitex ConfiguracaoMarmitex[]

  @@unique([restauranteId, descricao])
}

model ConfiguracaoMarmitex {
  id             Int          @id @default(autoincrement())
  tipoMarmitexId Int
  tipoMarmitex   TipoMarmitex @relation(fields: [tipoMarmitexId], references: [id], onDelete: Cascade)
  tipoItemId     Int
  tipoItem       TipoItem     @relation(fields: [tipoItemId], references: [id], onDelete: Cascade)
  quantidade     Int          @default(1)

  @@unique([tipoMarmitexId, tipoItemId])
}

model Cardapio {
  id            Int             @id @default(autoincrement())
  restauranteId Int
  restaurante   Restaurante     @relation(fields: [restauranteId], references: [id], onDelete: Cascade)
  dataValidade  DateTime        @default(now()) @db.Date
  CardapioItens CardapioItens[]
}

model CardapioItens {
  id         Int      @id @default(autoincrement())
  cardapioId Int
  cardapio   Cardapio @relation(fields: [cardapioId], references: [id], onDelete: Cascade)
  itemId     Int
  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@unique([cardapioId, itemId])
}

model RelatorioConversaWhatsApp {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  email     String?  @db.VarChar(100)
  phone     String   @db.VarChar(20)
  sendBy    String   @db.VarChar(10)
  message   String   @db.Text
  createdAt DateTime @default(now())
}
